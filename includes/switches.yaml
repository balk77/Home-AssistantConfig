- platform: template
  switches:
    zolder:
      friendly_name: 'Zolder PIR'
      value_template: "{{ is_state('binary_sensor.zolder_multisensor_burglar', 'on') }}"
      turn_on:
        service: switch.turn_on
        entity_id: switch.zolder_on
      turn_off:
        service: switch.turn_off
        entity_id: switch.zolder_off
# - platform: template
#   switches:
#     pihole:
#       friendly_name: 'Pi Hole'
#       turn_on:
#         service: pi_hole.enable
#       turn_off:
#         service: pi_hole.disable
#         data:
#           duration: '00:60:00'


- platform: command_line
  switches:
    pihole_switch:
#        command_on: "curl -s -X GET 'http://192.168.0.9/admin/api.php?enable&auth=7d743a9898855f96908d8cdee797e634b3c8fb5144002a082e4cb3625ce00fe3'"
#        command_off: "curl -s -X GET 'http://192.168.0.9/admin/api.php?disable=3600&auth=7d743a9898855f96908d8cdee797e634b3c8fb5144002a082e4cb3625ce00fe3'"
#        command_state: "curl -s -X GET 'http://192.168.0.9/admin/api.php?status&auth=7d743a9898855f96908d8cdee797e634b3c8fb5144002a082e4cb3625ce00fe3'"
      # command_on: "/usr/bin/curl -s -X GET 'http://192.168.0.9/admin/api.php?enable&auth='"
      # command_off: "/usr/bin/curl -s -X GET 'http://192.168.0.9/admin/api.php?disable=3600&auth='"
      # command_state: "/usr/bin/curl -s -X GET 'http://192.168.0.9/admin/api.php?status&auth='"
      command_on: "/usr/bin/curl -s -X GET 'http://192.168.0.6/admin/api.php?enable&auth=c7239f4b7455c41e79fd02e7ea861564f2a586155c6b9561713203883a9cce6f'"
      command_off: "/usr/bin/curl -s -X GET 'http://192.168.0.6/admin/api.php?disable=3600&auth=c7239f4b7455c41e79fd02e7ea861564f2a586155c6b9561713203883a9cce6f'"
      command_state: "/usr/bin/curl -s -X GET 'http://192.168.0.6/admin/api.php?status&auth=c7239f4b7455c41e79fd02e7ea861564f2a586155c6b9561713203883a9cce6f'"
      value_template: "{{ value_json.status == 'enabled' }}"
- platform: template
  switches:
    zolder_ventilatie:
      friendly_name: Zolder Ventilatie
      value_template: "{{ is_state('input_boolean.zolder_ventilatie', 'on') }}"
      turn_on:
        service: input_boolean.turn_on
        data:
          entity_id: input_boolean.zolder_ventilatie
      turn_off:
        service: input_boolean.turn_off
        data:
          entity_id: input_boolean.zolder_ventilatie
      icon_template: >-
          {% if is_state('input_boolean.zolder_ventilatie', 'on') %}
            mdi:fan
          {% else %}
            mdi:fan-off
          {% endif %}
# - platform: hadockermon
#   host: 192.168.0.9
#   port: 8126
  # stats: true
  # prefix: hadockermon
  # exclude:
  #   - 'dsmr-reader-docker'
  #   - 'esphomeyaml'
  #   - 'fhem-docker_fhem'
  #   - 'mosquitto'
  #   - 'grafana'
  #   - 'ha-dockermon'
  #   - 'influxdb'
  #   - 'letsencrypt'
  #   - 'nefit-easy-http-server'
  #   - 'node-red-docker'
  #   - 'pihole'
  #   - 'portainer'
  #   - 'raumfeldcontroller'
  #   - 'unifi'

  
- platform: rest
  resource: http://192.168.0.9:8126/container/appdaemon4
  name: Appdaemon
  body_on: '{"state": "start"}'
  body_off: '{"state": "stop"}'
  is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
- platform: rest
  resource: http://192.168.0.9:8126/container/qt-openzwave
  name: QT-openzwave
  body_on: '{"state": "start"}'
  body_off: '{"state": "stop"}'
  is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
- platform: rest
  resource: http://192.168.0.9:8126/container/letsencrypt-swag
  name: Letsencrypt swag webserver
  body_on: '{"state": "start"}'
  body_off: '{"state": "stop"}'
  is_on_template: '{{ value_json is not none and value_json.state == "running" }}'