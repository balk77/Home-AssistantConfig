# schedy:
#   module: hass_apps_loader
#   class: SchedyApp
#   actor_type: switch
#   actor_templates:

#     # Each template needs to have a name.
#     # The "default" template is always present, no matter if you define
#     # it or not. Of course it will be empty by default.
#     default:

#       # Actor type-specific settings can be found in the documentation.


#   rooms:
#     zolder:
#       schedule:
#       # From Monday to Friday, set temperature to 20.5 Â°C from 7.45 am
#       # to 10.00 pm.
#       #- { temp: 18, start: "6:30", end: "8:00", weekdays: 1-5 }
#       #- { temp: 18, start: "6:30", end: "8:00", weekdays: 6,7 }
#       - { temp: 18, start: "17:00", end: "19:00", weekdays: 1-7 }

# # schedy:
# #   # Obligatory settings that tell appdaemon where to find the app.
# #   # You shouldn't need to change these two.
# #   module: hass_apps_loader
# #   class: SchedyApp

# #   # Enable debugging output
# #   #debug: false


# #   # By default, Schedy applies schedules at startup so that all rooms
# #   # are set to their configured values. When disabling this setting,
# #   # Schedy will try to fetch the last known scheduled value from the
# #   # records stored in Home Assistant and only re-send when that differs
# #   # from the current value.
# #   #reset_at_startup: true


# #   # If you enable this option, potentially harmful expressions received
# #   # in schedy_set_value events are evaluated.
# #   #expressions_from_events: false

# #   # Here you can define Python modules that should be available
# #   # inside your expressions. These modules are imported upon Schedy's
# #   # initialization, hence you have to restart AppDaemon after making
# #   # changes to these modules.
# #   expression_modules:
# #     #math:
# #     #my_custom_module:
# #       # Optionally, define an alternative name under which the module
# #       # should be available.
# #       #as: alt_name


# #   # Chose the type of actors that should be controlled by this instance
# #   # of Schedy.
# #   # Possible types can be found in the documentation.
# #   #actor_type: <required>

# #   # In the following config block, you may define templates with
# #   # settings that affect multiple actors in your setup. These can then be
# #   # used as a starting point for the configuration of individual actors.
# #   actor_templates:

# #     # Each template needs to have a name.
# #     # The "default" template is always present, no matter if you define
# #     # it or not. Of course it will be empty by default.
# #     default:

# #       # Actor type-specific settings can be found in the documentation.


# #   # Add schedule rules you want to have prepended to each room's schedule
# #   # automatically here.
# #   schedule_prepend:

# #   # Add schedule rules you want to have appended to each room's schedule
# #   # automatically here.
# #   schedule_append:

# #   # Optionally, configure schedule snippets that can be included by
# #   # expressions dynamically. See the documentation for an example on
# #   # how to use them.
# #   schedule_snippets:

# #     #summer:
# #     # ...


# #   # Configure your rooms here.
# #   rooms:

# #     # Create such a block for every room you want to control.
# #     #living:

# #       # An alternative friendly name to display in logs.
# #       #friendly_name: ...

# #       # This setting controls whether changes reported by one actor
# #       # should automatically be replicated to the other ones in this
# #       # particular room.
# #       #replicate_changes: true

# #       # Set this value to a number of minutes and Schedy will
# #       # automatically re-schedule the value after a manual change has
# #       # been made. If you, for instance, use the thermostat actor type
# #       # and change the target temperature at one of your thermostats and
# #       # this value is set to 120, Schedy will again apply the schedule
# #       # two hours after you made the change.
# #       # 0 means not re-schedule before the next scheduled value change
# #       # occurs.
# #       #reschedule_delay: 0

# #       # All actors of this room go here.
# #       #actors:

# #         # This could be a sample thermostat.
# #         #climate.living1:

# #           # Choose the template this actor should inherit its settings
# #           # from.
# #           #template: default

# #           # We could, for instance, overwrite the delta defined in the
# #           # template, if any, for this particular thermostat only.
# #           delta: 1.0